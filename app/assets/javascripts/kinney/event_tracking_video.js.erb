Kinney.uuid = function(){
  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
    var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
    return v.toString(16);
  });
};

Kinney.engagement.tracker_delay_counter = 0;
Kinney.engagement.tracker_seconds = [];

// Turns all time ranges into an array of seconds
Kinney.engagement.time_ranges_to_array = function(time_ranges){
  var ranges = [];
  for (var i=0; i < time_ranges.length; i++) {
    var range = {};
    range.start = Math.round(time_ranges.start(i));
    range.end   = Math.round(time_ranges.end(i)) ;
    ranges.push(range);
  }
  return ranges;
}

Kinney.engagement.tracker_seconds = function(){
  return Kinney.engagement.time_ranges_to_array($('video')[0].played);
}

Kinney.engagement.track = function(){
  if (Kinney.current_video_id) {
    var data = {site: '<%= Rails.application.class.parent_name %>'};
    data.video = Kinney.current_video_id;
    data.time = new Date();
    data.uuid = Kinney.current_uuid;
    data.seconds = Kinney.engagement.tracker_seconds();
    <%= 'console.log(data);' if Rails.env == 'development' %>
    $.ajax({
      type: "POST",
      url: '<%= File.join((Rails.configuration.action_controller.relative_url_root || ''), Kinney::Engine.routes.url_helpers.tracker_track_path) %>',
      dataType: 'json',
      contentType: 'application/json',
      data: JSON.stringify(data)
    });
  }
};

// Wait for the video element to be parsed before attempting this.
$(document).ready(function(){

  if ($('#kinney_clips_show video').length > 0) {
    Kinney.current_video_id = $('video').get(0).id;
    Kinney.current_uuid = Kinney.uuid();
  }

  // Every 25 times the timeupdate event fires we'll log the time ranges played.
  $('video').bind('timeupdate',function(){
    Kinney.engagement.tracker_delay_counter += 1;
    if (Kinney.engagement.tracker_delay_counter >= 25) {
      Kinney.engagement.track();
      Kinney.engagement.tracker_delay_counter = 0; // reset the delay counter
    }
  });

  // For the seeked, pause, and ended events also send off the tracking data
  // so that we do not lose some data.
  // TODO: Are there other events when we should send the tracker?
  $('video').bind('seeked pause ended', function(){
    Kinney.engagement.track();
  });

  // For any link that is clicked on the page also send the tracking data. This will ensure
  // that the latest time ranges are sent to the server before visiting a new page.
  $('a').click(function(){
    Kinney.engagement.track();
    Kinney.engagement.pause(); // add a pause so we are sure the POST event can finish
  });

  // Wait until the video metadata has been loaded before we try to determine the current video source.
  $('video').on('loadedmetadata', function(){

    // Track the play event.
    $('video').on('play', function(){
      Kinney.gaq_track(['_trackEvent','Video', 'Play', Kinney.video_identifier()]);
    });

    // Track the pause event.
    $('video').on('pause', function(){
      Kinney.gaq_track(['_trackEvent','Video', 'Pause', Kinney.video_identifier()]);
    });

    // Track the seeked event. This gets fired when the currentTime is set. For instance it gets
    // triggered with a click on the time rail control.
    $('video').on('seeked', function(){
      Kinney.gaq_track(['_trackEvent','Video', 'Seeked', Kinney.video_identifier()]);
    });

    // Track the ended event.
    $('video').on('ended', function(){
      Kinney.gaq_track(['_trackEvent','Video', 'Ended', Kinney.video_identifier()]);
    });

    $('video').on('volumechange', function(){
      Kinney.gaq_track(['_trackEvent', 'Video', 'Volume', Kinney.video_identifier()]);
    });

    // track non-link, non-event video elements
    $('.mejs-fullscreen-button').click(function(){
      Kinney.gaq_track(['_trackEvent', 'Video', 'Full Screen', Kinney.video_identifier()]);
    });
    $('.mejs-volume-button').click(function(){
      Kinney.gaq_track(['_trackEvent', 'Video', 'Captions', Kinney.video_identifier()]);
    });
    $('.mejs-time-rail').click(function(){
      Kinney.gaq_track(['_trackEvent', 'Video', 'Time Rail', Kinney.video_identifier()]);
    });

  });

});



